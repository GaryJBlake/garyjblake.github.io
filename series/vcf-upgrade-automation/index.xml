<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VCF Upgrade Automation on My Cloudy World</title><link>http://jadenetworksolutions.co.uk/series/vcf-upgrade-automation/</link><description>Recent content in VCF Upgrade Automation on My Cloudy World</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2019–2022, Gary Blake; all rights reserved.</copyright><lastBuildDate>Thu, 24 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://jadenetworksolutions.co.uk/series/vcf-upgrade-automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating the Upgrade of VMware Cloud Foundation with APIs/PowerVCF/PowerShell</title><link>http://jadenetworksolutions.co.uk/post/vcf/vcf-automated-upgrade/</link><pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate><guid>http://jadenetworksolutions.co.uk/post/vcf/vcf-automated-upgrade/</guid><description>
A couple of years ago I wrote a series of blogs (see here) which discussed the process of automating the deployment procedures of VMware Cloud Foundation using the Public APIs, in this new series we will take a look at how we can automate the steps involved in upgrading VMware Cloud Foundation from one release to another.
But before we can begin performing any actual upgrade steps we must carry out some prerequisites which include:</description></item><item><title>Automating VCF Upgrade - Download Release Bundles</title><link>http://jadenetworksolutions.co.uk/post/vcf/vcf-automated-upgrade-01/</link><pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate><guid>http://jadenetworksolutions.co.uk/post/vcf/vcf-automated-upgrade-01/</guid><description>
In order to upgrade VMware Cloud Foundation you must first download the upgrade bundles, I recently wrote a blog Automating the Download of VCF Bundles for a Release on this topic which I shared a script vcfBundleDownload.ps1 which can be downloaded from GitHub which we will utilize as part of the procedure here. The script takes a JSON as input where we define the bundle IDs for download but as part of this post I will share a way to automate that part too.</description></item></channel></rss>